import java.io.*;
import java.util.*;

public class Main{
  public static void display(int[] a){
    StringBuilder sb = new StringBuilder();

    for(int val: a){
      sb.append(val + "\n");
    }
    System.out.println(sb);
  }

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    int n = Integer.parseInt(br.readLine());
    int[] a = new int[n];
    for(int i = 0; i < n; i++){
       a[i] = Integer.parseInt(br.readLine());
    }

    int[] nge = solve2(a);
    display(nge);
 }

 public static int[] solve(int[] arr){
   int[] ans = new int[arr.length];
   
   Stack<Integer> st = new Stack<>();
   
   for(int i = arr.length - 1; i >= 0; i--){
       //pop all smaller elements
       while(st.size() > 0 && arr[st.peek()] < arr[i]){
           st.pop();
       }
       
       //update ans
       if(st.size() == 0){
           ans[i] = -1;
       }else{
           ans[i] = arr[st.peek()];
       }
       
       //push current index in the stack
       st.push(i);
       
   }
   
   return ans;
 }
 
 public static int[] solve2(int[] arr){
     int[] ans = new int[arr.length];
     Stack<Integer> st = new Stack<>();
     
     st.push(0);
     
     for(int i = 1; i < arr.length; i++){
         while(st.size() > 0 && arr[st.peek()] < arr[i]){
             ans[st.pop()] = arr[i];
         }
         st.push(i);
     }
     
     while(st.size() > 0){
         ans[st.pop()] = -1;
     }
     
     return ans;
 }

}